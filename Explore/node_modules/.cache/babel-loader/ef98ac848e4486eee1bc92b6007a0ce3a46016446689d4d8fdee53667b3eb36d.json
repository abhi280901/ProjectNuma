{"ast":null,"code":"const handleUpload = async () => {\n  if (!file) return alert(\"Please select a file first!\");\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  try {\n    setLoading(true);\n    setPrediction(null);\n    const response = await axios.post(\"http://localhost:8000/predict\", formData);\n    console.log(\"Response:\", response.data);\n    if (response.data) {\n      const {\n        classification_report,\n        predictions\n      } = response.data;\n      setPrediction({\n        report: classification_report,\n        results: predictions\n      });\n    } else {\n      alert(\"‚ùå No prediction data received.\");\n    }\n  } catch (error) {\n    console.error(\"Error uploading file:\", error);\n    if (error.response) {\n      console.log(\"Response error:\", error.response.data);\n      alert(`‚ö†Ô∏è Server error: ${error.response.data.detail || \"Unknown issue.\"}`);\n    } else if (error.request) {\n      console.log(\"No response:\", error.request);\n      alert(\"‚ùå No response from server. Check your backend or network connection.\");\n    } else {\n      console.log(\"Unknown error:\", error.message);\n      alert(`üîß Error: ${error.message}`);\n    }\n  } finally {\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["handleUpload","file","alert","formData","FormData","append","setLoading","setPrediction","response","axios","post","console","log","data","classification_report","predictions","report","results","error","detail","request","message"],"sources":["/Users/abhiraajsithambaram/Documents/GitHub/ProjectNuma/Explore/src/App.jsx"],"sourcesContent":["const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file first!\");\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n        setLoading(true);\n        setPrediction(null);\n        const response = await axios.post(\"http://localhost:8000/predict\", formData);\n\n        console.log(\"Response:\", response.data);\n\n        if (response.data) {\n            const { classification_report, predictions } = response.data;\n\n            setPrediction({\n                report: classification_report,\n                results: predictions,\n            });\n        } else {\n            alert(\"‚ùå No prediction data received.\");\n        }\n    } catch (error) {\n        console.error(\"Error uploading file:\", error);\n\n        if (error.response) {\n            console.log(\"Response error:\", error.response.data);\n            alert(`‚ö†Ô∏è Server error: ${error.response.data.detail || \"Unknown issue.\"}`);\n        } else if (error.request) {\n            console.log(\"No response:\", error.request);\n            alert(\"‚ùå No response from server. Check your backend or network connection.\");\n        } else {\n            console.log(\"Unknown error:\", error.message);\n            alert(`üîß Error: ${error.message}`);\n        }\n    } finally {\n        setLoading(false);\n    }\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI,CAACC,IAAI,EAAE,OAAOC,KAAK,CAAC,6BAA6B,CAAC;EAEtD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;EAE7B,IAAI;IACAK,UAAU,CAAC,IAAI,CAAC;IAChBC,aAAa,CAAC,IAAI,CAAC;IACnB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,+BAA+B,EAAEP,QAAQ,CAAC;IAE5EQ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IAEvC,IAAIL,QAAQ,CAACK,IAAI,EAAE;MACf,MAAM;QAAEC,qBAAqB;QAAEC;MAAY,CAAC,GAAGP,QAAQ,CAACK,IAAI;MAE5DN,aAAa,CAAC;QACVS,MAAM,EAAEF,qBAAqB;QAC7BG,OAAO,EAAEF;MACb,CAAC,CAAC;IACN,CAAC,MAAM;MACHb,KAAK,CAAC,gCAAgC,CAAC;IAC3C;EACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAE7C,IAAIA,KAAK,CAACV,QAAQ,EAAE;MAChBG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEM,KAAK,CAACV,QAAQ,CAACK,IAAI,CAAC;MACnDX,KAAK,CAAC,oBAAoBgB,KAAK,CAACV,QAAQ,CAACK,IAAI,CAACM,MAAM,IAAI,gBAAgB,EAAE,CAAC;IAC/E,CAAC,MAAM,IAAID,KAAK,CAACE,OAAO,EAAE;MACtBT,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEM,KAAK,CAACE,OAAO,CAAC;MAC1ClB,KAAK,CAAC,sEAAsE,CAAC;IACjF,CAAC,MAAM;MACHS,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEM,KAAK,CAACG,OAAO,CAAC;MAC5CnB,KAAK,CAAC,aAAagB,KAAK,CAACG,OAAO,EAAE,CAAC;IACvC;EACJ,CAAC,SAAS;IACNf,UAAU,CAAC,KAAK,CAAC;EACrB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}